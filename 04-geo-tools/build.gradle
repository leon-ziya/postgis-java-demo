apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "io.freefair.lombok"

group = 'xyz.lonelyleaf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    querydslVersion = "4.4.0"
    geotoolsVersion = "24.1"
}

//添加mapstuct的一些配置
compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',//默认生成为spring bean
            '-Amapstruct.unmappedTargetPolicy=ERROR',//未映射字段默认报错
//            '-Aspatial=true'//未映射字段默认报错
    ]
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //数据库管理
    implementation 'org.flywaydb:flyway-core'
    //pg驱动
    implementation "org.postgresql:postgresql:$postgresJdbcVersion"
//    //postgis
//    implementation "net.postgis:postgis-jdbc:$postgisJdbcVersion"
    //hibernate-spatial
    implementation 'org.hibernate:hibernate-spatial'
    //querydsl
    implementation "com.querydsl:querydsl-jpa:$querydslVersion"
    implementation "com.querydsl:querydsl-spatial:$querydslVersion"
    annotationProcessor "com.querydsl:querydsl-spatial:$querydslVersion"
    annotationProcessor "com.querydsl:querydsl-apt:$querydslVersion:jpa"

    //jdk9后jdk中不再包含javax的包，但querydsl有依赖，这里补全下
    annotationProcessor "javax.persistence:javax.persistence-api:2.2"
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'

    //jackson相关
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
    implementation "com.fasterxml.jackson.module:jackson-module-afterburner"

    implementation 'javax.persistence:javax.persistence-api:2.2'

    //java bean转换
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //swagger文档
    implementation "io.springfox:springfox-boot-starter:$springFoxVersion"
    implementation "io.springfox:springfox-swagger-ui:$springFoxVersion"
    implementation "io.springfox:springfox-bean-validators:$springFoxVersion"

    implementation "org.geolatte:geolatte-geom:$geolatteGeomVersion"
    implementation "org.geolatte:geolatte-geojson:$geolatteGeomVersion"

//    //jts
//    implementation "org.locationtech.jts:jts-core:$jtsVersion"
//    implementation "org.locationtech.spatial4j:spatial4j:$spatial4jVersion"
    //序列化为geojson
    //这个没维护了，只有自己改下
    //implementation 'com.bedatadriven:jackson-datatype-jts:2.2'
//    implementation project(':00-jackson-datatype-jts')
    //postgis-jdbc-jts
    implementation project(':00-postgis-jdbc-jts')

    implementation "org.geotools:gt-shapefile:$geotoolsVersion"

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    resolutionStrategy {
        //spring boot的配置中会有缓存，这样就无法实时更新SNAPSHOT的包，这里关闭缓存
        cacheChangingModulesFor 0, 'seconds'
    }
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
    dependencies {
        dependency 'com.google.guava:guava:27.0.1-jre'
    }
}

test {
    useJUnitPlatform()
}
